{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "window",
    "io",
    "require",
    "Global",
    "cc",
    "Class",
    "extends",
    "Component",
    "statics",
    "ip",
    "sio",
    "isPinging",
    "fnDisconnect",
    "handlers",
    "addHandler",
    "event",
    "fn",
    "console",
    "log",
    "handler",
    "data",
    "JSON",
    "parse",
    "on",
    "connect",
    "fnConnect",
    "fnError",
    "self",
    "opts",
    "connected",
    "close",
    "key",
    "value",
    "startHearbeat",
    "lastRecieveTime",
    "Date",
    "now",
    "setInterval",
    "reconnectMatch",
    "ping",
    "send",
    "stringify",
    "emit",
    "disconnect",
    "vv",
    "http",
    "sendRequest",
    "userId",
    "userMgr",
    "match_net",
    "port",
    "gameNetMgr",
    "initHandlers",
    "userid",
    "test",
    "fnResult",
    "xhr",
    "ret",
    "isonline",
    "arr",
    "split",
    "account",
    "sign",
    "setTimeout",
    "abort"
  ],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "if (window.io == null) {\n    window.io = require(\"socket-io\");\n}\nvar Global = cc.Class({\n    extends: cc.Component,\n    statics: {\n        ip: \"\",\n        sio: null,\n        isPinging: false,\n        fnDisconnect: null,\n        handlers: {},\n        addHandler: function(event, fn) {\n            if (this.handlers[event]) {\n                console.log(\"event:\" + event + \"' handler has been registered.\");\n                return;\n            }\n            var handler = function(data) {\n                //console.log(event + \"(\" + typeof(data) + \"):\" + (data? data.toString():\"null\"));\n                if (event != \"disconnect\" && typeof(data) == \"string\") {\n                    data = JSON.parse(data);\n                }\n                fn(data);\n            };\n            this.handlers[event] = handler;\n            if (this.sio) {\n                console.log(\"register:function \" + event);\n                this.sio.on(event, handler);\n            }\n        },\n        connect: function(fnConnect, fnError) {\n            var self = this;\n            var opts = {\n                'reconnection': true,\n                'force new connection': true,\n                'transports': ['websocket', 'polling']\n            }\n            this.sio = window.io.connect(this.ip, opts);\n            this.sio.on('reconnect', function() {\n                console.log('reconnection');\n            });\n            this.sio.on('connect', function(data) {\n                self.sio.connected = true;\n                fnConnect(data);\n            });\n            this.sio.on('disconnect', function(data) {\n                console.log(\"disconnect\");\n                self.sio.connected = false;\n                self.close();\n            });\n            this.sio.on('connect_failed', function() {\n                console.log('connect_failed');\n            });\n            for (var key in this.handlers) {\n                var value = this.handlers[key];\n                if (typeof(value) == \"function\") {\n                    if (key == 'disconnect') {\n                        this.fnDisconnect = value;\n                    } else {\n                        console.log(\"register:function \" + key);\n                        this.sio.on(key, value);\n                    }\n                }\n            }\n            this.startHearbeat();\n        },\n        startHearbeat: function() {\n            this.sio.on('game_pong', function() {\n                self.lastRecieveTime = Date.now();\n            });\n            this.lastRecieveTime = Date.now();\n            var self = this;\n            if (!self.isPinging) {\n                self.isPinging = true;\n                setInterval(function() {\n                    if (self.sio) {\n                        //FIXME: 超时设为3s\n                        if (Date.now() - self.lastRecieveTime > 10000) {\n                            self.close();\n                            self.reconnectMatch();\n                        } else {\n                            self.ping();\n                        }\n                    }\n                }, 5000);\n            }\n        },\n        send: function(event, data) {\n            if (this.sio.connected) {\n                if (data != null && (typeof(data) == \"object\")) {\n                    data = JSON.stringify(data);\n                    //console.log(data);              \n                }\n                this.sio.emit(event, data);\n            }\n        },\n        ping: function() {\n            this.send('game_ping');\n        },\n        close: function() {\n            console.log('close');\n            if (this.sio && this.sio.connected) {\n                this.sio.connected = false;\n                this.sio.disconnect();\n                this.sio = null;\n            }\n            if (this.fnDisconnect) {\n                this.fnDisconnect();\n                this.fnDisconnect = null;\n            }\n        },\n        reconnectMatch: function() {\n            cc.vv.http.sendRequest(\"/injinbiao\", {\n                userId: cc.vv.userMgr.userId\n            }, function(data) {\n                if (data.ip) {\n                    cc.vv.match_net.ip = data.ip + \":\" + data.port;\n                    cc.vv.match_net.connect(function() {\n                        cc.vv.gameNetMgr.initHandlers(100);\n                        cc.vv.match_net.send(\"reconnect\", {\n                            userid: self.userId\n                        });\n                    }, function() {});\n                };\n            });\n        },\n        test: function(fnResult) {\n            var xhr = null;\n            var fn = function(ret) {\n                fnResult(ret.isonline);\n                xhr = null;\n            }\n            var arr = this.ip.split(':');\n            var data = {\n                account: cc.vv.userMgr.account,\n                sign: cc.vv.userMgr.sign,\n                ip: arr[0],\n                port: arr[1],\n            }\n            xhr = cc.vv.http.sendRequest(\"/is_server_online\", data, fn);\n            setTimeout(function() {\n                if (xhr) {\n                    xhr.abort();\n                    fnResult(false);\n                }\n            }, 1500);\n        }\n    },\n});"
  ]
}