{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "ACTION_CHUPAI",
    "ACTION_MOPAI",
    "ACTION_PENG",
    "ACTION_GANG",
    "ACTION_HU",
    "ACTION_CHI",
    "ACTION_CAISHEN",
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "_lastAction",
    "_actionRecords",
    "_currentIndex",
    "onLoad",
    "clear",
    "init",
    "data",
    "action_records",
    "isReplay",
    "getNextAction",
    "length",
    "si",
    "action",
    "pai",
    "type",
    "takeAction",
    "vv",
    "gameNetMgr",
    "doGuo",
    "nextActionDelay",
    "doChupai",
    "doMopai",
    "doTurnChange",
    "doPeng",
    "dispatchEvent",
    "doGang",
    "doHu",
    "seatindex",
    "hupai",
    "iszimo",
    "chiArr",
    "i",
    "splice",
    "doChi",
    "doCaiShen"
  ],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "var ACTION_CHUPAI = 1;\r\nvar ACTION_MOPAI = 2;\r\nvar ACTION_PENG = 3;\r\nvar ACTION_GANG = 4;\r\nvar ACTION_HU = 5;\r\nvar ACTION_CHI = 7;\r\nvar ACTION_CAISHEN = 8;\r\ncc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        _lastAction: null,\r\n        _actionRecords: null,\r\n        _currentIndex: 0,\r\n    },\r\n    // use this for initialization\r\n    onLoad: function() {},\r\n    clear: function() {\r\n        this._lastAction = null;\r\n        this._actionRecords = null;\r\n        this._currentIndex = 0;\r\n    },\r\n    init: function(data) {\r\n        this._actionRecords = data.action_records;\r\n        if (this._actionRecords == null) {\r\n            this._actionRecords = {};\r\n        }\r\n        this._currentIndex = 0;\r\n        this._lastAction = null;\r\n    },\r\n    isReplay: function() {\r\n        return this._actionRecords != null;\r\n    },\r\n    getNextAction: function() {\r\n        if (this._currentIndex >= this._actionRecords.length) {\r\n            return null;\r\n        }\r\n        var si = this._actionRecords[this._currentIndex++];\r\n        var action = this._actionRecords[this._currentIndex++];\r\n        var pai = this._actionRecords[this._currentIndex++];\r\n        return {\r\n            si: si,\r\n            type: action,\r\n            pai: pai\r\n        };\r\n    },\r\n    takeAction: function() {\r\n        var action = this.getNextAction();\r\n        if (this._lastAction != null && this._lastAction.type == ACTION_CHUPAI) {\r\n            if (action != null && action.type != ACTION_PENG && action.type != ACTION_GANG && action.type != ACTION_HU) {\r\n                cc.vv.gameNetMgr.doGuo(this._lastAction.si, this._lastAction.pai);\r\n            }\r\n        }\r\n        this._lastAction = action;\r\n        if (action == null) {\r\n            return -1;\r\n        }\r\n        var nextActionDelay = 1.0;\r\n        if (action.type == ACTION_CHUPAI) {\r\n            //console.log(\"chupai\");\r\n            cc.vv.gameNetMgr.doChupai(action.si, action.pai);\r\n            return 1.0;\r\n        } else if (action.type == ACTION_MOPAI) {\r\n            //console.log(\"mopai\");\r\n            cc.vv.gameNetMgr.doMopai(action.si, action.pai);\r\n            cc.vv.gameNetMgr.doTurnChange(action.si);\r\n            return 0.5;\r\n        } else if (action.type == ACTION_PENG) {\r\n            //console.log(\"peng\");\r\n            cc.vv.gameNetMgr.doPeng(action.si, action.pai);\r\n            cc.vv.gameNetMgr.doTurnChange(action.si);\r\n            return 1.0;\r\n        } else if (action.type == ACTION_GANG) {\r\n            //console.log(\"gang\");\r\n            cc.vv.gameNetMgr.dispatchEvent('hangang_notify', action.si);\r\n            cc.vv.gameNetMgr.doGang(action.si, action.pai);\r\n            cc.vv.gameNetMgr.doTurnChange(action.si);\r\n            return 1.0;\r\n        } else if (action.type == ACTION_HU) {\r\n            //console.log(\"hu\");\r\n            cc.vv.gameNetMgr.doHu({\r\n                seatindex: action.si,\r\n                hupai: action.pai,\r\n                iszimo: false\r\n            });\r\n            return 1.5;\r\n        } else if (action.type == ACTION_CHI) {\r\n            //console.log(\"chi\");\r\n            // \r\n            // var pd = {\r\n            //     \"pai\": pai,\r\n            //     \"chiArray\": chiArray\r\n            // };\r\n            var pai = action.pai[\"pai\"];\r\n            var chiArr = action.pai[\"chiArray\"];\r\n            for (var i = 0; i < chiArr.length; i++) {\r\n                if (chiArr[i] == pai) {\r\n                    chiArr.splice(i, 1);\r\n                }\r\n            }\r\n            cc.vv.gameNetMgr.doChi(action.si, pai, chiArr);\r\n            return 1.5;\r\n        } else if (action.type == ACTION_CAISHEN) {\r\n            cc.vv.gameNetMgr.doCaiShen(action.si, action.pai);\r\n            return 1.5;\r\n        }\r\n    }\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n    // },\r\n});"
  ]
}