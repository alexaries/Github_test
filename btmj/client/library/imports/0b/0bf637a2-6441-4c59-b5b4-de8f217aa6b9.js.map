{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "_folds",
    "onLoad",
    "vv",
    "initView",
    "initEventHandler",
    "initAllFolds",
    "game",
    "node",
    "getChildByName",
    "sides",
    "i",
    "length",
    "sideName",
    "sideRoot",
    "folds",
    "foldRoot",
    "j",
    "children",
    "n",
    "active",
    "sprite",
    "getComponent",
    "Sprite",
    "spriteFrame",
    "push",
    "hideAllFolds",
    "k",
    "f",
    "self",
    "on",
    "data",
    "initFolds",
    "detail",
    "seats",
    "gameNetMgr",
    "seatData",
    "localIndex",
    "getLocalIndex",
    "seatindex",
    "pre",
    "mahjongmgr",
    "getFoldPre",
    "side",
    "getSide",
    "foldsSprites",
    "index",
    "setSpriteFrameByMJID",
    "target_node",
    "old_x",
    "x",
    "old_y",
    "y",
    "pos",
    "folds_diff_x",
    "find",
    "action",
    "moveTo",
    "p",
    "runAction",
    "mjid",
    "getSpriteFrameByMJID"
  ],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        _folds: null,\r\n    },\r\n    // use this for initialization\r\n    onLoad: function() {\r\n        if (cc.vv == null) {\r\n            return;\r\n        }\r\n        this.initView();\r\n        this.initEventHandler();\r\n        this.initAllFolds();\r\n    },\r\n    initView: function() {\r\n        this._folds = {};\r\n        var game = this.node.getChildByName(\"game\");\r\n        var sides = [\"myself\", \"right\", \"up\", \"left\"];\r\n        for (var i = 0; i < sides.length; ++i) {\r\n            var sideName = sides[i];\r\n            var sideRoot = game.getChildByName(sideName);\r\n            var folds = [];\r\n            var foldRoot = sideRoot.getChildByName(\"folds\");\r\n            for (var j = 0; j < foldRoot.children.length; ++j) {\r\n                var n = foldRoot.children[j];\r\n                n.active = false;\r\n                var sprite = n.getComponent(cc.Sprite);\r\n                sprite.spriteFrame = null;\r\n                folds.push(sprite);\r\n            }\r\n            this._folds[sideName] = folds;\r\n        }\r\n        this.hideAllFolds();\r\n    },\r\n    hideAllFolds: function() {\r\n        for (var k in this._folds) {\r\n            var f = this._folds[i];\r\n            for (var i in f) {\r\n                f[i].node.active = false;\r\n            }\r\n        }\r\n    },\r\n    initEventHandler: function() {\r\n        var self = this;\r\n        this.node.on('game_begin', function(data) {\r\n            self.initAllFolds();\r\n        });\r\n        this.node.on('game_sync', function(data) {\r\n            self.initAllFolds();\r\n        });\r\n        this.node.on('game_chupai_notify', function(data) {\r\n            self.initFolds(data.detail);\r\n        });\r\n        this.node.on('guo_notify', function(data) {\r\n            self.initFolds(data.detail);\r\n        });\r\n    },\r\n    initAllFolds: function() {\r\n        var seats = cc.vv.gameNetMgr.seats;\r\n        for (var i in seats) {\r\n            this.initFolds(seats[i]);\r\n        }\r\n    },\r\n    initFolds: function(seatData) {\r\n        var folds = seatData.folds;\r\n        if (folds == null) {\r\n            return;\r\n        }\r\n        var localIndex = cc.vv.gameNetMgr.getLocalIndex(seatData.seatindex);\r\n        var pre = cc.vv.mahjongmgr.getFoldPre(localIndex);\r\n        var side = cc.vv.mahjongmgr.getSide(localIndex);\r\n        var foldsSprites = this._folds[side];\r\n        for (var i = 0; i < folds.length; ++i) {\r\n            var index = i;\r\n            if (side == \"right\" || side == \"up\") {\r\n                index = foldsSprites.length - i - 1;\r\n            }\r\n            var sprite = foldsSprites[index];\r\n            this.setSpriteFrameByMJID(pre, sprite, folds[i]);\r\n            if (side == \"myself\" && i == folds.length - 1) {\r\n                //如果是最后一个\r\n                var target_node = sprite.node;\r\n                var old_x = target_node.x;\r\n                var old_y = target_node.y;\r\n                var pos = {\r\n                    x: 0,\r\n                    y: 0\r\n                };\r\n                var folds_diff_x = cc.find(\"Canvas/game/myself/folds\").x;\r\n                if (pos) {\r\n                    target_node.x = pos.x / 0.8 - folds_diff_x / 0.8; //移到出牌位置\r\n                    target_node.y = 70;\r\n                    var action = cc.moveTo(0.2, cc.p(old_x, old_y));\r\n                    target_node.runAction(action);\r\n                }\r\n            } else {\r\n                sprite.node.active = true;\r\n            }\r\n        }\r\n        for (var i = folds.length; i < foldsSprites.length; ++i) {\r\n            var index = i;\r\n            if (side == \"right\" || side == \"up\") {\r\n                index = foldsSprites.length - i - 1;\r\n            }\r\n            var sprite = foldsSprites[index];\r\n            sprite.spriteFrame = null;\r\n            sprite.node.active = false;\r\n        }\r\n    },\r\n    setSpriteFrameByMJID: function(pre, sprite, mjid) {\r\n        sprite.spriteFrame = cc.vv.mahjongmgr.getSpriteFrameByMJID(pre, mjid);\r\n        sprite.node.active = true;\r\n    },\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n    // },\r\n});"
  ]
}